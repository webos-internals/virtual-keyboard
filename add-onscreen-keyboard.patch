diff --git a/usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js b/usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
index 4307893..9d81279 100644
--- a/usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
+++ b/usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
@@ -674,6 +674,7 @@ _Dialog:'widget_dialog',
 Pager:null,
 Drawer:null,
 CharSelector:null,
+OnScreenKeyboard:null,
 FilterList:null,
 _Submenu:'widget_submenu',
 ExperimentalGridList:'widget_grid',
@@ -3717,6 +3718,12 @@ if(this.charSelector&&this.charSelector.element&&this.charSelector.element.mojo&
 return;
 }
 this.charSelector=this.createDynamicWidget('CharSelector',{selectionTarget:event.selectionTarget});
+}else if(event.type===Mojo.Event.renderOnScreenKeyboard){
+
+if(this.charSelector&&this.charSelector.element&&this.charSelector.element.mojo&&this.charSelector.element.mojo.isOpen()){
+return;
+}
+this.charSelector=this.createDynamicWidget('OnScreenKeyboard',{selectionTarget:event.selectionTarget});
 }
 },
 
@@ -3996,6 +4003,7 @@ kDefaultSceneName:'main',
 kSceneClassName:'palm-scene',
 kBrowserObject:'application/x-palm-browser',
 enableAltCharPicker:true,
+enableOnScreenKeyboard:true,
 
 
 
@@ -4008,6 +4016,7 @@ this.document=this.window.document;
 this.paramsFromURI=this.document.baseURI.toQueryParams();
 this.stageType=this.paramsFromURI.window||"card";
 this._stageProxy=stageProxy;
+this.metaCount=0;
 
 this._stagePreparing=true;
 
@@ -4871,6 +4880,13 @@ var scene=this.topScene();
 var tempTextArea,msg,scriptNode;
 var webView;
 
+/* Use pageup (179) for emulator */
+if (event.keyCode === Mojo.Char.metaKey || event.keyCode === 179) {
+  if (this.metaCount === 2) {
+    this.metaDoubleTap=true;
+  }
+}
+
 if(Mojo.Controller.isGoBackKey(event)){
 var newEv=Mojo.Event.make(Mojo.Event.back,{originalEvent:event});
 this.sendEventToCommanders(newEv);
@@ -4891,6 +4907,16 @@ if(webView){
 webView.mojo.isEditing(this._sendCharpickerEventCallback.bind(this,Mojo.Event.renderAltCharacters,webView,null));
 }
 }
+}else if(this.enableOnScreenKeyboard&&this.metaDoubleTap){
+this.metaDoubleTap=false;
+if(this.doesTargetAcceptKeys(event.target)){
+this._sendCharpickerEvent(Mojo.Event.renderOnScreenKeyboard,event.target,null);
+}else{
+webView=this._getWebview(event.target);
+if(webView){
+webView.mojo.isEditing(this._sendCharpickerEventCallback.bind(this,Mojo.Event.renderOnScreenKeyboard,webView,null));
+}
+}
 }else if(event.keyCode===Mojo.Char.o&&event.ctrlKey&&event.shiftKey&&Mojo.Config.debuggingEnabled){
 
 
@@ -4933,8 +4959,6 @@ tempTextArea.remove();
 }else{
 
 
-
-
 scene=this.activeScene();
 if(event.metaKey&&scene&&scene.handleShortcut(String.fromCharCode(event.which),event)){
 Event.stop(event);
@@ -4949,6 +4973,14 @@ this._forwardEventToTopContainer(Mojo.Event.keyup,event);
 _keyDownHandler:function(event){
 var webView;
 
+if (event.keyCode === Mojo.Char.metaKey || event.keyCode === 179) {
+  this.metaCount++;
+  console.log("meta count = " + this.metaCount);
+  if (this.metaCount === 1) {
+    this.metaTimer=this.window.setTimeout(function(){this.metaCount=0;}.bind(this), 600);
+  }
+}
+
 if(this.enableAltCharPicker&&event.keyCode!==Mojo.Char.opt&&event.ctrlKey){
 if(this.doesTargetAcceptKeys(event.target)){
 this._sendCharpickerEvent(Mojo.Event.renderChordedAltCharacters,event.target,event.keyCode);
@@ -9431,6 +9463,9 @@ Mojo.Event.renderAltCharacters='mojo-altchars';
 Mojo.Event.renderChordedAltCharacters='mojo-altchars-chorded';
 
 
+Mojo.Event.renderOnScreenKeyboard='webos-internals-onscreen-keyboard';
+
+
 Mojo.Event.orientationChange='mojo-orientation';
 
 
@@ -10619,7 +10654,7 @@ return stringTable;
 
 Mojo.Locale.set=function(currentLocale,formatRegion){
 var deviceInfo=Mojo.Environment.DeviceInfo;
-var altCharFullTable,altCharTable;
+var altCharFullTable,altCharTable,kbCharTable,kbCharFullTable;
 
 if(Mojo.Locale.current!=currentLocale){
 Mojo.Locale.current=currentLocale;
@@ -10660,13 +10695,21 @@ Mojo.Locale.frameworkStrings=Mojo.Locale.readStringTable("strings.json",Mojo.Loc
 if(deviceInfo.keyboardType===Mojo.Environment.AZERTY){
 altCharTable="alternatechars_table_azerty.json";
 altCharFullTable="alternatechars_fulltable_azerty.json";
+kbCharTable="kbchars_table_azerty.json";
+kbCharFullTable="kbchars_fulltable_azerty.json";
 }else if(deviceInfo.keyboardType===Mojo.Environment.QWERTZ){
 altCharTable="alternatechars_table_qwertz.json";
 altCharFullTable="alternatechars_fulltable_qwertz.json";
+kbCharTable="kbchars_table_qwertz.json";
+kbCharFullTable="kbchars_fulltable_qwertz.json";
 }else{
 altCharTable="alternatechars_table.json";
 altCharFullTable="alternatechars_fulltable.json";
+kbCharTable="kbchars_table.json";
+kbCharFullTable="kbchars_fulltable.json";
 }
+Mojo.Locale.kbCharacters=Mojo.Locale.readStringTable(kbCharTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
+Mojo.Locale.kbCharactersFull=Mojo.Locale.readStringTable(kbCharFullTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.alternateCharacters=Mojo.Locale.readStringTable(altCharTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.alternateCharactersFull=Mojo.Locale.readStringTable(altCharFullTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.DateTimeStrings=Mojo.Locale.readStringTable("datetime_table.json",Mojo.Locale.current,Mojo.Locale.frameworkResourcePath);
@@ -19131,6 +19174,9 @@ handleMouseEvent:function(event){
 if(event.target&&Mojo.View.getParentWithAttribute(event.target,"x-mojo-element","CharSelector")){
 return;
 }
+if(event.target&&Mojo.View.getParentWithAttribute(event.target,"x-mojo-element","OnScreenKeyboard")){
+return;
+}
 
 switch(this.STATE){
 case this.ADDRESSING_WIDGET_UNFOCUSED:
@@ -28599,7 +28645,8 @@ return false;
 
 sendChanges:function(triggeringEvent){
 
-if(!Mojo.View.getParentWithAttribute(triggeringEvent.target,'x-mojo-element','CharSelector')){
+if(!Mojo.View.getParentWithAttribute(triggeringEvent.target,'x-mojo-element','CharSelector') &&
+   !Mojo.View.getParentWithAttribute(triggeringEvent.target,'x-mojo-element','OnScreenKeyboard')){
 this.maybeSendPropertyChangeEvent(triggeringEvent);
 }
 },
@@ -34320,6 +34367,1045 @@ return true;
 }
 return false;
 };
+
+/* oskb */
+Mojo.Widget.OnScreenKeyboard=Class.create({
+
+HI_PADDING_TOP:40,
+
+HI_PADDING_BOTTOM:20,
+
+HI_PADDING_LEFT:20,
+
+HI_PADDING_RIGHT:20,
+
+HI_COLUMNS:10,
+
+HI_MINIMUM_TOP:10,
+
+HI_MAX_BOTTOM:5,
+
+/* oskb */
+initialize:function(){
+this.VIRT_KB_MEDIA_PATH='/media/internal/virtual-keyboard/';
+this.VIRT_KB_THEMES_PATH=this.VIRT_KB_MEDIA_PATH + 'themes/';
+this.VIRT_KB_SOUNDS_PATH=this.VIRT_KB_MEDIA_PATH + 'sounds/';
+this.VIRT_KB_OPEN=0;
+this.VIRT_KB_FILTERING_STATE=1;
+this.VIRT_KB_CLOSED=2;
+this.VIRT_KB_EMPTY=3;
+
+this.SHIFT_OFF=0;
+this.SHIFT_ONCE=1;
+this.SHIFT_LOCK=2;
+
+this.FUNC_OFF=0;
+this.FUNC_ONCE=1;
+this.FUNC_LOCK=2;
+
+this.state=this.VIRT_KB_OPEN;
+this.shiftState=this.SHIFT_OFF;
+this.funcState=this.FUNC_OFF;
+
+this.dragEnabled=false;
+this.scrollEnabled=false;
+this.customStyle=undefined;
+this.templateSuffix="";
+this.layout="portrait";
+this.textCase="lowercase";
+this.charList=[];
+this.localizedTable=Mojo.Locale.kbCharacters;
+this.localizedTableFull=Mojo.Locale.kbCharactersFull;
+},
+
+
+/* oskb */
+setup:function(){
+var model=this.controller.model;
+
+var options = Mojo.parseJSON(palmGetResource(this.VIRT_KB_MEDIA_PATH + '/kb_config.json'));
+
+if (options) {
+  this.theme=options.theme;
+  this.haptic=options.haptic;
+  this.clickFile=options.clickFile;
+}
+
+this.controller.exposeMethods(['close','isOpen']);
+if(this.controller.attributes.target){
+this.target=this.controller.get(this.controller.attributes.target);
+}else if(model.selectionTarget){
+this.target=this.controller.get(model.selectionTarget);
+}
+this.divPrefix=Mojo.View.makeUniqueId();
+this.currCode=this.controller.model.character;
+if(this.currCode!==undefined){
+this.chorded=true;
+}
+
+if(this.renderWidget(this.controller.model.character)){
+this.handleMouseOver=this.handleMouseOver.bindAsEventListener(this);
+this.handleMouseUp=this.handleMouseUp.bindAsEventListener(this);
+this.handleMouseDown=this.handleMouseDown.bindAsEventListener(this);
+this.handleDragStart=this.handleDragStart.bindAsEventListener(this);
+this.handleDragEnd=this.handleDragEnd.bindAsEventListener(this);
+this.handleDragging=this.handleDragging.bindAsEventListener(this);
+this.handleKeyEvent=this.handleKeyEvent.bind(this);
+this.handleKeyUpEvent=this.handleKeyUpEvent.bind(this);
+this.handleTapEvent=this.handleTapEvent.bind(this);
+this.handleOrientation=this.handleOrientation.bindAsEventListener(this);
+this.controller.listen(this.target,"keydown",this.handleKeyEvent,true);
+this.controller.listen(this.target,"keyup",this.handleKeyUpEvent,true);
+this.controller.listen(this.controller.document,Mojo.Event.orientationChange,this.handleOrientation,true);
+this.controller.listen(this.controller.document,Mojo.Event.dragStart,this.handleDragStart,true);
+this.controller.listen(this.controller.document,Mojo.Event.dragEnd,this.handleDragEnd,true);
+this.controller.listen(this.controller.document,Mojo.Event.dragging,this.handleDragging,true);
+this.controller.listen(this.controller.document,'mouseover',this.handleMouseOver,false);
+this.controller.listen(this.controller.document,'mouseup',this.handleMouseUp,false);
+this.controller.listen(this.controller.document,'mousedown',this.handleMouseDown,false);
+this.controller.listen(this.controller.document,Mojo.Event.tap,this.handleTapEvent,true);
+
+if(this.chorded){
+
+this.state=this.VIRT_KB_FILTERING_STATE;
+}else{
+this.enterOpenState();
+}
+this.controller.scene.pushContainer(this.controller.element,this.controller.scene.submenuContainerLayer,
+{cancelFunc:this._emptyAndClose.bind(this)});
+this.controller.scene.pushCommander(this);
+}
+},
+
+
+/* oskb */
+cleanup:function(){
+
+
+this.charPicker=undefined;
+this.selectedIndex=undefined;
+this.state=this.VIRT_KB_CLOSED;
+this.cleanupEventListeners();
+},
+
+
+
+
+
+/* oskb */
+cleanupEventListeners:function(){
+this.controller.stopListening(this.target,"keydown",this.handleKeyEvent,true);
+this.controller.stopListening(this.target,"keyup",this.handleKeyUpEvent,true);
+this.controller.stopListening(this.controller.document,Mojo.Event.orientationChange,this.handleOrientation,true);
+this.controller.stopListening(this.target,Mojo.Event.dragStart,this.handleDragStart,true);
+this.controller.stopListening(this.controller.document,Mojo.Event.dragEnd,this.handleDragEnd,true);
+this.controller.stopListening(this.controller.document,Mojo.Event.dragging,this.handleDragging,true);
+this.controller.stopListening(this.controller.document,'mouseover',this.handleMouseOver,false);
+this.controller.stopListening(this.controller.document,'mouseup',this.handleMouseUp,false);
+this.controller.stopListening(this.controller.document,'mousedown',this.handleMouseDown,false);
+this.controller.stopListening(this.controller.document,Mojo.Event.tap,this.handleTapEvent,false);
+},
+
+
+/* oskb */
+loadTable:function(chr){
+var data,list;
+var i=0;
+var that=this;
+var table;
+var letter;
+var alt;
+var span;
+
+this.charList=[];
+table=this.localizedTableFull;
+
+table.each(function(c){
+/* TODO: get rid of list idea that doesn't need to exist for kb */
+  list = c.list;
+  letter = c.letter;
+  alt = c.alt;
+  span = c.span;
+  if(list){
+    list.each(function(item){
+      data={
+        index:i,
+        character:item,
+        letter:letter,
+        alt:alt,
+        span:span,
+        keyCode:c.keyCode
+      };
+
+      that.charList.push(data);
+      i++;
+    });
+  }
+  list=undefined;
+});
+
+if (this.theme !== "default") {
+  var themeTable = palmGetResource(this.VIRT_KB_THEMES_PATH + this.theme + '/theme_config.json');
+  if (themeTable) {
+    var themeObject = Mojo.parseJSON(themeTable);
+    var idx;
+    var img;
+    var c;
+    var span;
+    var bg;
+    var class;
+    themeObject.each(function(t){
+      idx=t.index;
+      img=t.image;
+      c=t.character;
+      span=t.span;
+      class=t.class;
+      if ((idx>=0) && (idx<that.charList.length)) {
+        if (c) {
+          that.charList[idx].character=c;
+          if (img) {
+          that.charList[idx].character="<img name='" + idx + "' class='kb-img' src='"+that.VIRT_KB_THEMES_PATH + that.theme + "/" + img + "' alt='" + c + "'>";
+          }
+          if (span) {
+            that.charList[idx].span = span;
+          }
+        }
+      }
+      if (!this.customStyle&&class) {
+        that.customStyle = t;
+      }
+    });
+  }
+}
+},
+
+/* oskb */
+_setPopupPositions:function(picker){
+var top='',left='0',bottom='0';
+var cursorPos=Mojo.View.getCursorPosition(this.controller.window);
+var targetLeft;
+var pickerDims;
+var viewDims;
+var maxWidth,minWidth;
+
+/* TODO: go through this function */
+if(cursorPos){
+targetLeft=this.target.offsetLeft;
+viewDims=Mojo.View.getViewportDimensions(this.controller.document);
+
+
+pickerDims=Mojo.View.getDimensions(picker);
+
+/*
+console.log("left offset = " + targetLeft);
+console.log("cursor pos = " + cursorPos.x + ", " + cursorPos.y);
+console.log("viewDims = " + viewDims.width + " X " + viewDims.height);
+console.log("pickerDimes = " + pickerDims.width + " X " + pickerDims.height);
+console.log("target dims " + this.target.width + " X " + this.target.height);
+console.log("pickerDims = " + Object.toJSON(pickerDims));
+*/
+
+this.maxVert = viewDims.height - pickerDims.height;
+top=viewDims.height - 192;
+if ((cursorPos.y >= top) && (cursorPos.y > 192)) {
+  bottom=viewDims.height - cursorPos.y
+}
+
+left+='px';
+bottom+='px';
+}else if(this.target.type==='application/x-palm-browser'){
+
+}else{
+left='0px';
+bottom='0px';
+}
+
+left = '0px';
+console.log("EG: set bottom " + bottom);
+this.charPicker.setStyle({'bottom':bottom,'left':left});
+},
+
+
+/* oskb */
+translateToRow:function(results){
+
+var finished=false;
+var result;
+var newOffset=0;
+var transformedResults=[];
+
+while(!finished){
+result={};
+
+
+result.characters=Mojo.View.render({collection:results.slice(newOffset,newOffset+this.HI_COLUMNS),attributes:{divPrefix:this.divPrefix},template:this.itemTemplate});
+newOffset+=this.HI_COLUMNS;
+transformedResults.push(result);
+if(newOffset>=results.length){
+finished=true;
+}
+}
+return transformedResults;
+},
+
+
+  /* oskb */
+renderWidget:function(chr){
+var data;
+var charContent;
+var charContentModel;
+var pickerContent;
+var parent;
+
+this.loadTable(chr);
+if(this.charList&&this.charList.length>0){
+
+charContentModel={
+divPrefix:this.divPrefix
+};
+
+this.templateSuffix = "";
+this.layout="portrait";
+
+if (this.controller.stageController) {
+  var orientation = this.controller.stageController.getWindowOrientation();
+  if (orientation === "left" || orientation === "right") {
+    this.templateSuffix = '-ls';
+    this.layout="landscape";
+  }
+}
+
+this.itemTemplate=Mojo.Widget.getSystemTemplatePath('/kbselector/char'+this.templateSuffix),
+this.itemsModel={items:this.translateToRow(this.charList)};
+this.charPicker=undefined;
+pickerContent=Mojo.View.render({object:charContentModel,template:Mojo.Widget.getSystemTemplatePath('/kbselector/charselector'+this.templateSuffix)});
+
+parent=Mojo.View.getScrollerForElement(this.target);
+if(!parent){
+parent=this.controller.scene.sceneElement;
+}
+if(this.controller.element.parentNode!==parent){
+this.controller.reparent(parent);
+}
+this.controller.element.innerHTML=pickerContent;
+/* If we are not set to scroll (i.e. symbol button not pressed), remove 
+ * the scroller widget before instantiating */
+if (!this.scrollEnabled) {
+  this.controller.get(this.divPrefix+"-char-selector").removeAttribute("x-mojo-element");
+}
+
+this.charPicker=this.controller.get(this.divPrefix+'-kb-char-selector-div');
+
+/*
+if (this.theme === "default") {
+  console.log("EG: ADD classname");
+  this.charPicker.addClassName("default");
+}
+*/
+
+if (this.customStyle) {
+  this.charPicker.setStyle(this.customStyle);
+}
+
+this.controller.scene.setupWidget('char-list',
+{itemTemplate:Mojo.Widget.getSystemTemplatePath('kbselector/char-selector-row'+this.templateSuffix),renderLimit:30},this.itemsModel);
+this.controller.instantiateChildWidgets(this.charPicker);
+/* Adjust the width based on the span number */
+for (var i=0; i<40; i++) {
+  if (this.charList[i].span) {
+    var newWidth = this.charList[i].span * 10 + "%";
+    this._getMatching(this.charPicker,i).setStyle({"width":newWidth});
+  }
+}
+this.controller.scene.showWidgetContainer(this.charPicker);
+this._setPopupPositions(this.charPicker);
+
+this.funcDiv=this.controller.get(this.divPrefix+"-20");
+this.shiftDiv=this.controller.get(this.divPrefix+"-31");
+this.symDiv=this.controller.get(this.divPrefix+"-35");
+this.blankDivLeft=this.controller.get(this.divPrefix+"-30");
+this.blankDivRight=this.controller.get(this.divPrefix+"-36");
+/*
+console.log("EG: HTML = " + this.charPicker.innerHTML);
+*/
+this.selectedIndex=0;
+/*
+this._updateSelected(null,this._selectedIdxElem());
+*/
+if(this._selectedIdxElem()){
+this.perLine=Math.floor(Element.getWidth(this.charPicker)/Element.getWidth(this._selectedIdxElem()));
+}else{
+this.perLine=0;
+}
+return true;
+}else{
+if(!this.chorded){
+this.exitSelector();
+return false;
+}else{
+return true;
+}
+}
+},
+
+
+/* oskb */
+enterOpenState:function(){
+
+this.state=this.VIRT_KB_OPEN;
+},
+
+
+/* oskb */
+_maybeRemoveCharpicker:function(){
+if(this.charPicker){
+if(this.charPicker.parentNode){
+Element.remove(this.charPicker);
+}
+this.charPicker=undefined;
+}
+},
+
+
+/* oskb */
+enterFilteringState:function(keyCode){
+
+this.state=this.VIRT_KB_FILTERING_STATE;
+
+if(this.currCode!==keyCode){
+this.currCode=keyCode;
+
+this._maybeRemoveCharpicker();
+this.renderWidget(this.currCode);
+}else{
+
+this.advance();
+}
+},
+
+
+/* oskb */
+handleModelChanged:function(model,what){
+Element.show(this.charPicker);
+if(Mojo.Char.isValid(this.controller.model.character)){
+this.enterFilteringState(this.controller.model.character);
+}
+},
+
+
+/* oskb */
+_emptyAndClose:function(){
+this.state=this.VIRT_KB_EMPTY;
+this.close();
+},
+
+
+/* oskb */
+close:function(){
+
+if(this.state===this.VIRT_KB_FILTERING_STATE||this.state===this.VIRT_KB_OPEN){
+this.exitSelector(this.getEntered());
+return;
+}
+
+this._safeRemove();
+},
+
+
+/* oskb */
+isOpen:function(){
+return this.state!==this.VIRT_KB_CLOSED;
+},
+
+/* oskb */
+isSpecialChar:function(keyCode){
+  return(Mojo.Char.isEnterKey(keyCode));
+},
+
+/* oskb */
+isSupported:function(keyCode){
+  return(keyCode && (keyCode !== Mojo.Char.altKey));
+},
+
+/* oskb */
+updateText:function(){
+  for (var i=0; i<28; i++) {
+    this.controller.get(this.divPrefix+"-"+i).setStyle({"text-transform":this.textCase});
+    switch(this.textCase) {
+      case 'uppercase':
+        this.charList[i].letter = this.charList[i].letter.toUpperCase();
+        break;
+      case 'lowercase':
+        this.charList[i].letter = this.charList[i].letter.toLowerCase();
+        break;
+    }
+  }
+},
+
+/* oskb */
+handleShift:function(){
+if (this.shiftState === this.SHIFT_OFF) {
+  this.shiftState = this.SHIFT_ONCE;
+  this.shiftDiv.addClassName("kb-active-char");
+  this.textCase = "uppercase";
+}
+else if (this.shiftState === this.SHIFT_ONCE) {
+  this.shiftState = this.SHIFT_LOCK;
+  this.shiftDiv.addClassName("locked");
+  return;
+}
+else {
+  this.shiftState = this.SHIFT_OFF;
+  this.textCase = "lowercase";
+  this.shiftDiv.removeClassName("kb-active-char");
+  this.shiftDiv.removeClassName("locked");
+}
+
+this.updateText();
+},
+
+/* oskb */
+handleFunc:function(){
+/* TODO: Update the keys on screen when using text (default theme) */
+if (this.funcState === this.FUNC_OFF) {
+  this.funcState = this.FUNC_ONCE;
+  this.funcDiv.addClassName("kb-active-char");
+  this.useAltChars = true;
+}
+else if (this.funcState === this.FUNC_ONCE) {
+  this.funcState = this.FUNC_LOCK;
+  this.funcDiv.addClassName("locked");
+  return;
+}
+else {
+  this.funcState = this.FUNC_OFF;
+  this.useAltChars = false;
+  this.funcDiv.removeClassName("kb-active-char");
+  this.funcDiv.removeClassName("locked");
+}
+},
+
+/* oskb */
+exitSelector:function(chr){
+var letter;
+var characterVal,selection;
+var tagName=this.target.tagName;
+var selectionStart,selectionEnd;
+var isWebView=false;
+
+if(this.target.mojo&&this.target.mojo.insertStringAtCursor){
+isWebView=true;
+}
+
+if(chr){
+letter=chr.letter || chr.character || " ";
+
+if (this.useAltChars && chr.alt) {
+  letter = chr.alt;
+}
+
+selection=this.controller.window.getSelection();
+
+if (chr.keyCode === 0 && !this.scrollEnabled) {
+  this.dragEnabled = true;
+  this.blankDivLeft.addClassName("kb-active-char locked");
+  this.blankDivRight.addClassName("kb-active-char locked");
+  return;
+}
+else if (Mojo.Char.isDeleteKey(chr.keyCode)) {
+  this.controller.document.execCommand("Delete");
+}
+else if (this.isSpecialChar(chr.keyCode)) {
+  if (Mojo.Char.isEnterKey(chr.keyCode)) {
+    this.state=this.VIRT_KB_CLOSED;
+    this.cleanupEventListeners();
+    this._safeRemove.bind(this).delay(0.2);
+  }
+  Mojo.Event.send(this.target,'keydown',{keyCode:chr.keyCode});
+  Mojo.Event.send(this.target,'keyup',{keyCode:chr.keyCode});
+}
+else if (chr.keyCode === Mojo.Char.altKey) {
+  if (this.shiftState === this.SHIFT_LOCK) {
+    this.handleShift();
+  }
+  this.handleFunc();
+}
+else if (chr.keyCode === Mojo.Char.shift) {
+  if (this.funcState === this.FUNC_LOCK) {
+    this.handleFunc();
+  }
+  this.handleShift();
+}
+else if (this.isSymKey(chr.keyCode)) {
+  /* TODO: is this really the only way to dynamically start/stop scrolling? */
+  this.scrollEnabled = !this.scrollEnabled;
+  this.renderWidget();
+  if (this.scrollEnabled) {
+    this.symDiv.addClassName("kb-active-char locked");
+  }
+  else {
+    this.symDiv.removeClassName("kb-active-char locked");
+  }
+  
+  return;
+}
+else if (!this.isSupported(chr.keyCode)) {
+  console.log("Char keycode " + chr.keyCode + " not supported (yet)");
+  return;
+}
+else if(selection&&selection.rangeCount>0&&selection.getRangeAt(0)){
+this.controller.document.execCommand("insertText",true,letter);
+}else if(isWebView&&letter!==null&&letter!==undefined){
+this.target.mojo.insertStringAtCursor(letter);
+}
+
+
+if(this.target.mojo&&this.target.mojo.setText){
+selectionStart=this.target.selectionStart;
+selectionEnd=this.target.selectionEnd;
+this.target.mojo.setText(this.target.value);
+this.target.selectionStart=selectionStart;
+this.target.selectionEnd=selectionEnd;
+}
+
+
+/*
+this.cleanupEventListeners();
+this._safeRemove.bind(this).delay(0.2);
+*/
+}else{
+this._safeRemove();
+}
+
+if(!isWebView){
+this.target.focus();
+}
+
+if (chr && this.shiftState === this.SHIFT_ONCE && chr.keyCode !== Mojo.Char.shift){
+  this.shiftState = this.SHIFT_OFF;
+  this.shiftDiv.removeClassName("locked");
+  this.shiftDiv.removeClassName("kb-active-char");
+  this.textCase = "lowercase";
+  this.updateText();
+}
+if (chr && this.funcState === this.FUNC_ONCE && chr.keyCode !== Mojo.Char.altKey){
+  this.funcState = this.FUNC_OFF;
+  this.funcDiv.removeClassName("locked");
+  this.funcDiv.removeClassName("kb-active-char");
+  this.useAltChars = false;
+}
+},
+
+
+/* oskb */
+_safeRemove:function(){
+this.controller.scene.removeContainer(this.controller.element);
+if(this.controller.element&&this.controller.element.parentNode){
+Element.remove(this.controller.element);
+}
+},
+
+
+/* oskb */
+_insertChar:function(origValue,letter,start,end){
+var value='';
+if(origValue){
+value=origValue.substring(0,start);
+value+=letter;
+value+=origValue.substring(end,origValue.length);
+}else{
+value=letter;
+}
+return value;
+},
+
+
+/* oskb */
+advance:function(){
+var old=this._selectedIdxElem();
+var newElm;
+
+if(this.selectedIndex+1>this.charList.length-1){
+this.selectedIndex=0;
+}else{
+this.selectedIndex++;
+}
+
+/* oskb */
+newElm=this._selectedIdxElem();
+this._updateSelected(old,newElm);
+},
+
+
+/* oskb */
+retreat:function(){
+var old,newElm;
+
+old=this._selectedIdxElem();
+if(this.selectedIndex===0){
+this.selectedIndex=this.charList.length-1;
+}else{
+this.selectedIndex=this.selectedIndex-1;
+}
+newElm=this._selectedIdxElem();
+this._updateSelected(old,newElm);
+},
+
+
+/* oskb */
+_getMatching:function(element,query){
+if(!element){
+return;
+}
+return element.querySelector("[name='"+query+"']");
+},
+
+
+/* oskb */
+_updateSelected:function(oldSelection,newSelection){
+var node;
+if(oldSelection){
+node=this._getMatching(oldSelection,oldSelection.getAttribute("name"));
+if(node){
+node.removeClassName("selected-char");
+}
+}
+if(newSelection){
+node=this._getMatching(newSelection,newSelection.getAttribute("name"));
+if(node){
+node.addClassName("selected-char");
+}
+}
+},
+
+
+
+/* oskb */
+moveDown:function(){
+var old,newElm;
+if(this.selectedIndex+this.perLine<this.charList.length){
+old=this._selectedIdxElement();
+this.selectedIndex=this.selectedIndex+this.perLine;
+newElm=this._selectedIdxElement();
+this._updateSelected(old,newElm);
+}
+},
+
+
+/* oskb */
+moveUp:function(){
+var old,newElm;
+if(this.selectedIndex-this.perLine>=0){
+old=this._selectedIdxElem();
+this.selectedIndex=this.selectedIndex-this.perLine;
+newElm=this._selectedIdxElem();
+this._updatedSelected(old,newElm);
+}
+},
+
+
+/* oskb */
+updatePosition:function(key){
+switch(key){
+case Mojo.Char.leftArrow:
+this.retreat();
+break;
+case Mojo.Char.upArrow:
+this.moveUp();
+break;
+case Mojo.Char.rightArrow:
+this.advance();
+break;
+case Mojo.Char.downArrow:
+this.moveDown();
+break;
+default:
+break;
+}
+
+if(this.charPicker){
+this.controller.get(this.divPrefix+'-char-selector').mojo.revealElement(this._selectedIdxElem());
+}
+},
+
+
+
+/* oskb */
+handleKeyUpEvent:function(event){
+this.exitSelector();
+return;
+var keyCode=event.keyCode;
+var chr;
+
+this.exitSelector();
+return;
+
+if(this.isSymKey(keyCode)){
+if(this.state===this.VIRT_KB_FILTERING_STATE){
+chr=this.getEntered();
+}
+this.exitSelector(chr);
+Event.stop(event);
+return;
+}
+},
+
+
+/* oskb */
+handleKeyEvent:function(event){
+return;
+var keyCode=event.keyCode;
+
+if(Mojo.Char.isEnterKey(keyCode)){
+this.exitSelector(this.getEntered());
+Event.stop(event);
+
+return;
+}
+if(Mojo.Char.isDeleteKey(keyCode)){
+this.exitSelector();
+Event.stop(event);
+return;
+}
+if(this.isDirectionalKey(keyCode)){
+this.updatePosition(keyCode);
+Event.stop(event);
+return;
+}
+
+if(!Mojo.Char.isValid(keyCode)){
+return;
+}
+
+switch(this.state){
+case this.VIRT_KB_OPEN:
+case this.VIRT_KB_FILTERING_STATE:
+case this.VIRT_KB_EMPTY:
+this.enterFilteringState(keyCode);
+Event.stop(event);
+break;
+default:
+break;
+}
+},
+
+/* oskb */
+maybeChangeLayout:function(){
+  var orientation = this.controller.stageController.getWindowOrientation();
+  switch (this.layout) {
+    case "portrait":
+      if (orientation==="left" || orientation==="right") {
+        this.renderWidget();
+      }
+    break;
+    case "landscape":
+      if (orientation==="up" || orientation==="down") {
+        this.renderWidget();
+      }
+    break;
+  }
+},
+
+/* oskb */
+playClick:function(){
+var request = new Mojo.Service.Request('palm://com.palm.crotest', {
+    method: 'PlaySound',
+    parameters: {"file":this.VIRT_KB_SOUNDS_PATH + this.clickFile}
+    });
+},
+
+/* oskb */
+vibrate:function(){ 
+var request2 = new Mojo.Service.Request('palm://com.palm.vibrate', {
+    method: 'vibrate',
+    parameters: {"period": 0, "duration": this.haptic}
+    });
+},
+
+/* oskb */
+handleOrientation:function(event){
+/*TODO: I'm not sure why, but every change I get two events, back to back.
+ *      For now just ignore the 2nd orient event */
+if (this.ignoreSecond) {
+  this.ignoreSecond=false;
+  return;
+}
+else {
+  this.ignoreSecond=true;
+  this.maybeChangeLayout();
+}
+},
+
+/* oskb */
+handleMouseDown:function(event){
+if (this.scrollEnabled || this.dragEnabled) {
+  return;
+}
+
+if (this.isInCharPicker(event.target)) {
+  if (this.haptic > 0 && this.haptic <= 100) {
+    this.vibrate();
+  }
+
+  var name = event.target.getAttribute('name');
+  this.preview=this.controller.get(this.divPrefix+"-"+name);
+  if (this.preview) {
+    this.preview.addClassName("kb-selected-char");
+  }
+}
+else {
+  this.exitSelector();
+}
+},
+
+/* oskb */
+handleMouseOver:function(event){
+if (this.scrollEnabled || this.dragEnabled) {
+  return;
+}
+
+if (this.preview && (this.preview !== event.target)) {
+  this.preview.removeClassName("kb-selected-char");
+  this.preview=undefined;
+}
+
+if (this.isInCharPicker(event.target)) {
+  var name = event.target.getAttribute('name');
+  this.preview=this.controller.get(this.divPrefix+"-"+name);
+  if (this.preview) {
+    this.preview.addClassName("kb-selected-char");
+  }
+}
+},
+
+/* oskb */
+handleMouseUp:function(event){
+if (this.scrollEnabled || this.dragEnabled) {
+  return;
+}
+
+if (this.isInCharPicker(event.target)) {
+  if (this.clickFile) {
+    this.playClick();
+  }
+
+  if (this.preview) {
+    this.preview.removeClassName.bind(this.preview).defer("kb-selected-char");
+    this.preview=undefined;
+  }
+
+  if (this.state === this.VIRT_KB_OPEN){
+    this.exitSelector(this.getSelected(event.target));
+    event.stop();
+  }
+}
+},
+
+/* oskb */
+handleTapEvent:function(event){
+if (!this.scrollEnabled) {
+  return;
+}
+
+if (this.state === this.VIRT_KB_OPEN){
+  var name = event.target.getAttribute('name');
+  this.preview=this.controller.get(this.divPrefix+"-"+name);
+  if (this.preview) {
+    this.preview.addClassName("kb-selected-char");
+  }
+  this.exitSelector(this.charList[name]);
+  event.stop();
+  if (this.preview) {
+    this.preview.removeClassName.bind(this.preview).defer("kb-selected-char");
+  }
+}
+},
+
+/* oskb */
+handleDragStart:function(event){
+if (this.dragEnabled && !this.scrollEnabled) {
+  Mojo.Drag.startDragging(this.controller.scene,this.charPicker,event.down,
+  {
+    preventHorizontal:true,
+    preventDropReset:true,
+    draggingClass: "kb-drag",
+    maxVerticalPixel: this.maxVert,
+    minVerticalPixel: 0
+  });
+}
+},
+
+/* oskb */
+handleDragging:function(event){
+},
+
+/* oskb */
+handleDragEnd:function(event){
+this.dragEnabled = false;
+this.charPicker.setStyle({"position":"fixed"});
+this.blankDivLeft.removeClassName("kb-active-char locked");
+this.blankDivRight.removeClassName("kb-active-char locked");
+},
+
+/* oskb */
+getEntered:function(){
+return this.charList[this.selectedIndex];
+},
+
+/* oskb */
+getSelected:function(target){
+var chr=target.getAttribute('name');
+
+return this.charList[chr];
+},
+
+
+
+
+
+
+/* oskb */
+isDirectionalKey:function(key){
+if(key==Mojo.Char.leftArrow||key==Mojo.Char.upArrow||key==Mojo.Char.rightArrow||key==Mojo.Char.downArrow){
+return true;
+}
+return false;
+},
+
+
+/* oskb */
+isInCharPicker:function(target){
+if(!this.charPicker){
+return;
+}
+if(target.id==this.charPicker.id||Element.up(target,'div#'+this.charPicker.id)){
+return true;
+}
+return false;
+},
+
+
+/* oskb */
+isSymKey:function(keyCode){
+return keyCode===Mojo.Char.sym;
+},
+
+
+/* oskb */
+_selectedIdxElem:function(){
+return this.controller.get(this.divPrefix+"-"+this.selectedIndex);
+},
+
+
+/* oskb */
+handleCommand:function(commandEvent){
+if(commandEvent.type===Mojo.Event.back&&(this.state!==this.VIRT_KB_CLOSED&&this.state!==this.VIRT_KB_EMPTY)){
+this.exitSelector();
+Event.stop(commandEvent);
+}
+}
+});
+
 /* Compressed by the perl version of jsmin. */
 /* JavaScript::Minifier 0.02 */
 
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable.json
new file mode 100644
index 0000000..1d35116
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable.json
@@ -0,0 +1,86 @@
+[
+  {"keyCode": 81, "letter":"q", "list": ["q"], alt: "/"},
+  {"keyCode": 87, "letter":"w", "list": ["w"], alt: "+"},
+  {"keyCode": 69, "letter":"e", "list": ["e"], alt: "1"},
+  {"keyCode": 82, "letter":"r", "list": ["r"], alt: "2"},
+  {"keyCode": 84, "letter":"t", "list": ["t"], alt: "3"},
+  {"keyCode": 89, "letter":"y", "list": ["y"], alt: "("},
+  {"keyCode": 85, "letter":"u", "list": ["u"], alt: ")"},
+  {"keyCode": 73, "letter":"i", "list": ["i"], alt: "%"},
+  {"keyCode": 79, "letter":"o", "list": ["o"], alt: "\""},
+  {"keyCode": 80, "letter":"p", "list": ["p"], alt: "="},
+
+  {"keyCode": 65, "letter":"a", "list": ["a"], alt: "&"},
+  {"keyCode": 83, "letter":"s", "list": ["s"], alt: "-"},
+  {"keyCode": 68, "letter":"d", "list": ["d"], alt: "4"},
+  {"keyCode": 70, "letter":"f", "list": ["f"], alt: "5"},
+  {"keyCode": 71, "letter":"g", "list": ["g"], alt: "6"},
+  {"keyCode": 72, "letter":"h", "list": ["h"], alt: "$"},
+  {"keyCode": 74, "letter":"j", "list": ["j"], alt: "!"},
+  {"keyCode": 75, "letter":"k", "list": ["k"], alt: ":"},
+  {"keyCode": 76, "letter":"l", "list": ["l"], alt: "'"},
+  {"keyCode": 8, "letter":"\b", "list": ["&laquo"]},
+
+  {"keyCode": 18, "letter":"alt-orange", "list": ["&curren"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"], alt: "*"},
+  {"keyCode": 88, "letter":"x", "list": ["x"], alt: "7"},
+  {"keyCode": 67, "letter":"c", "list": ["c"], alt: "8"},
+  {"keyCode": 86, "letter":"v", "list": ["v"], alt: "9"},
+  {"keyCode": 66, "letter":"b", "list": ["b"], alt: "#"},
+  {"keyCode": 78, "letter":"n", "list": ["n"], alt: "?"},
+  {"keyCode": 77, "letter":"m", "list": ["m"], alt: ";"},
+  {"keyCode": 188, "letter":",", "list": [","], alt: "_"},
+  {"keyCode": 13, "letter":"\n", "list": ["&raquo"]},
+
+  {"keyCode": 00, "letter":"blank", "list": ["&deg"]},
+  {"keyCode": 16, "letter":"shift", "list": ["&yen"], "span": 1.5},
+  {"keyCode": 90, "letter":"@", "list": ["@"], alt: "0"},
+  {"keyCode": 32, "letter":" ", "list": ["&nbsp"], "span": 3},
+  {"keyCode": 190, "letter":".", "list": ["."]},
+  {"keyCode": 17, "letter":"sym-ctrl", "list": ["&iquest"], "span": 1.5},
+  {"keyCode": 00, "letter":"blank", "list": ["&deg"]},
+
+  {"keyCode": 190, "letter":"", "list": ["/","?","+","(",")","%","\"","=","&","-","$","!",":","'","&","#","_"]},
+  {"keyCode": 48, "letter":"0", "list": ["0"]},
+  {"keyCode": 49, "letter":"1", "list": ["1"]},
+  {"keyCode": 50, "letter":"2", "list": ["2"]},
+  {"keyCode": 51, "letter":"3", "list": ["3"]},
+  {"keyCode": 52, "letter":"4", "list": ["4"]},
+  {"keyCode": 53, "letter":"5", "list": ["5"]},
+  {"keyCode": 54, "letter":"6", "list": ["6"]},
+  {"keyCode": 55, "letter":"7", "list": ["7"]},
+  {"keyCode": 56, "letter":"8", "list": ["8"]},
+  {"keyCode": 57, "letter":"9", "list": ["9"]},
+
+  {"keyCode": 190, "letter":"", "list": ["~","\\","•","`","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 65,  "letter":"", "list": ["á","à","ä","â","ã","å","æ"]},
+  {"keyCode": 65,  "letter":"", "list": ["Á","À","Ä","Â","Ã","Å","Æ"], "modifier": 16},
+  {"keyCode": 67,  "letter":"", "list": ["©","ç"]},
+  {"keyCode": 67,  "letter":"", "list": ["Ç"], "modifier": 16},
+  {"keyCode": 69,  "letter":"", "list": ["é","è","ë","ê","ē"]},
+  {"keyCode": 69,  "letter":"", "list": ["É","È","Ë","Ê"], "modifier": 16},
+  {"keyCode": 73,  "letter":"", "list": ["í","ì","ï","î"]},
+  {"keyCode": 73,  "letter":"", "list": ["Í","Ì","Ï","Î"], "modifier": 16},
+  {"keyCode": 78,  "letter":"", "list": ["ñ"]},
+  {"keyCode": 78,  "letter":"", "list": ["Ñ"], "modifier": 16},
+  {"keyCode": 79,  "letter":"", "list": ["ó","ò","ö","ô","œ","õ","ø"]},
+  {"keyCode": 79,  "letter":"", "list": ["Ó","Ò","Ö","Ô","Œ","Õ","Ø"], "modifier": 16},
+  {"keyCode": 83,  "letter":"", "list": ["ß"]},
+  {"keyCode": 85,  "letter":"", "list": ["ú","ù","ü","û"]},
+  {"keyCode": 85,  "letter":"", "list": ["Ú","Ù","Ü","Û"], "modifier": 16},
+  {"keyCode": 88,  "letter":"", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"", "list": ["ÿ"]},
+  {"keyCode": 89,  "letter":"", "list": ["Ÿ"], "modifier": 16},
+  {"keyCode": 82,  "letter":"", "list": ["®"]},
+  {"keyCode": 80,  "letter":"", "list": ["¶"]},
+  {"keyCode": 84,  "letter":"", "list": ["™"]},
+  {"keyCode": 68,  "letter":"", "list": ["†","‡"], "modifier": 16},
+  {"keyCode": 96,  "letter":"", "list": ["°"]},
+  {"keyCode": 97,  "letter":"", "list": ["¹", "¼", "½"]},
+  {"keyCode": 98,  "letter":"", "list": ["²"]},
+  {"keyCode": 99,  "letter":"", "list": ["³", "¾"]},
+  {"keyCode": 67,  "letter":"", "list": ["¡"]},
+  {"keyCode": 67,  "letter":"", "list": ["¿"]},
+  {"keyCode": 67,  "letter":"", "list": [":-)", ":-(", ";-)"]},
+  {"keyCode": 67,  "letter":"", "list": ["$","¢","€","£","¥"]}
+]
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable_qwertz.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable_qwertz.json
new file mode 100644
index 0000000..d4a8128
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable_qwertz.json
@@ -0,0 +1,58 @@
+[
+  {"keyCode": 65, "letter":"a", "list": ["a"]},
+  {"keyCode": 66, "letter":"b", "list": ["b"]},
+  {"keyCode": 67, "letter":"c", "list": ["c"]},
+  {"keyCode": 68, "letter":"d", "list": ["d"]},
+  {"keyCode": 69, "letter":"e", "list": ["e"]},
+  {"keyCode": 70, "letter":"f", "list": ["f"]},
+  {"keyCode": 70, "letter":"g", "list": ["g"]},
+  {"keyCode": 70, "letter":"h", "list": ["h"]},
+  {"keyCode": 70, "letter":"i", "list": ["i"]},
+  {"keyCode": 70, "letter":"j", "list": ["j"]},
+  {"keyCode": 70, "letter":"k", "list": ["k"]},
+  {"keyCode": 70, "letter":"l", "list": ["l"]},
+  {"keyCode": 70, "letter":"m", "list": ["m"]},
+  {"keyCode": 70, "letter":"n", "list": ["n"]},
+  {"keyCode": 70, "letter":"o", "list": ["o"]},
+  {"keyCode": 80, "letter":"p", "list": ["p"]},
+  {"keyCode": 80, "letter":"q", "list": ["q"]},
+  {"keyCode": 80, "letter":"r", "list": ["r"]},
+  {"keyCode": 80, "letter":"s", "list": ["s"]},
+  {"keyCode": 80, "letter":"t", "list": ["t"]},
+  {"keyCode": 80, "letter":"u", "list": ["u"]},
+  {"keyCode": 80, "letter":"v", "list": ["v"]},
+  {"keyCode": 80, "letter":"w", "list": ["w"]},
+  {"keyCode": 80, "letter":"x", "list": ["x"]},
+  {"keyCode": 80, "letter":"y", "list": ["y"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 65, "letter":"A", "list": ["A"], "modifier": 16},
+  {"keyCode": 67, "letter":"c", "list": ["©","ç"]},
+  {"keyCode": 67, "letter":"C", "list": ["Ç"], "modifier": 16},
+  {"keyCode": 69, "letter":"e", "list": ["é","è","ë","ê","ē"]},
+  {"keyCode": 69, "letter":"E", "list": ["É","È","Ë","Ê"], "modifier": 16},
+  {"keyCode": 73, "letter":"i", "list": ["í","ì","ï","î"]},
+  {"keyCode": 73, "letter":"I", "list": ["Í","Ì","Ï","Î"], "modifier": 16},
+  {"keyCode": 78, "letter":"n", "list": ["ñ"]},
+  {"keyCode": 78, "letter":"N", "list": ["Ñ"], "modifier": 16},
+  {"keyCode": 79, "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø"]},
+  {"keyCode": 79, "letter":"O", "list": ["Ó","Ò","Ö","Ô","Œ","Õ","Ø"], "modifier": 16},
+  {"keyCode": 83, "letter":"s", "list": ["ß"]},
+  {"keyCode": 85, "letter":"u", "list": ["ú","ù","ü","û"]},
+  {"keyCode": 85, "letter":"U", "list": ["Ú","Ù","Ü","Û"], "modifier": 16},
+  {"keyCode": 88, "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89, "letter":"y", "list": ["ÿ"]},
+  {"keyCode": 89, "letter":"Y", "list": ["Ÿ"], "modifier": 16},
+  {"keyCode": 82, "letter":"r", "list": ["®"]},
+  {"keyCode": 80, "letter":"p", "list": ["¶"]},
+  {"keyCode": 84, "letter":"t", "list": ["™"]},
+  {"keyCode": 68, "letter":"D", "list": ["†","‡"], "modifier": 16},
+  {"keyCode": 96, "letter":"0", "list": ["°"]},
+  {"keyCode": 97, "letter":"1", "list": ["¹", "¼", "½"]},
+  {"keyCode": 98, "letter":"2", "list": ["²"]},
+  {"keyCode": 99, "letter":"3", "list": ["³", "¾"]},
+  {"keyCode": 67, "letter":"!", "list": ["¡"]},
+  {"keyCode": 67, "letter":"?", "list": ["¿"]},
+  {"keyCode": 67, "letter":":", "list": [":-)", ":-(", ";-)"]},
+  {"keyCode": 67, "letter":"$", "list": ["$","¢","€","£","¥"]}
+]
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table.json
new file mode 100644
index 0000000..8544247
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table.json
@@ -0,0 +1,30 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["b"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_azerty.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_azerty.json
new file mode 100644
index 0000000..8180a5a
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_azerty.json
@@ -0,0 +1,29 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
\ No newline at end of file
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_qwertz.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_qwertz.json
new file mode 100644
index 0000000..8180a5a
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_qwertz.json
@@ -0,0 +1,29 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
\ No newline at end of file
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/resources/kbchars_fulltable.json b/usr/palm/frameworks/mojo/submissions/191.15/resources/kbchars_fulltable.json
new file mode 100644
index 0000000..6774f8f
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/resources/kbchars_fulltable.json
@@ -0,0 +1,87 @@
+[
+  {"keyCode": 80, "letter":"q", "list": ["q"]},
+  {"keyCode": 80, "letter":"w", "list": ["w"]},
+  {"keyCode": 69, "letter":"e", "list": ["e"]},
+  {"keyCode": 80, "letter":"r", "list": ["r"]},
+  {"keyCode": 80, "letter":"t", "list": ["t"]},
+  {"keyCode": 80, "letter":"y", "list": ["y"]},
+  {"keyCode": 80, "letter":"u", "list": ["u"]},
+  {"keyCode": 70, "letter":"i", "list": ["i"]},
+  {"keyCode": 70, "letter":"o", "list": ["o"]},
+  {"keyCode": 80, "letter":"p", "list": ["p"]},
+
+  {"keyCode": 65, "letter":"a", "list": ["a"]},
+  {"keyCode": 80, "letter":"s", "list": ["s"]},
+  {"keyCode": 68, "letter":"d", "list": ["d"]},
+  {"keyCode": 70, "letter":"f", "list": ["f"]},
+  {"keyCode": 70, "letter":"g", "list": ["g"]},
+  {"keyCode": 70, "letter":"h", "list": ["h"]},
+  {"keyCode": 70, "letter":"j", "list": ["j"]},
+  {"keyCode": 70, "letter":"k", "list": ["k"]},
+  {"keyCode": 70, "letter":"l", "list": ["l"]},
+  {"keyCode": 8, "letter":"\b", "list": ["&laquo"]},
+
+  {"keyCode": 90, "letter":"O", "list": ["O"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 80, "letter":"x", "list": ["x"]},
+  {"keyCode": 67, "letter":"c", "list": ["c"]},
+  {"keyCode": 80, "letter":"v", "list": ["v"]},
+  {"keyCode": 66, "letter":"b", "list": ["b"]},
+  {"keyCode": 70, "letter":"n", "list": ["n"]},
+  {"keyCode": 70, "letter":"m", "list": ["m"]},
+  {"keyCode": 90, "letter":",", "list": [","]},
+  {"keyCode": 90, "letter":"\n", "list": ["&raquo"]},
+
+  {"keyCode": 90, "letter":"blank", "list": ["&deg"]},
+  {"keyCode": 90, "letter":"shift", "list": ["&yen"]},
+  {"keyCode": 90, "letter":"@", "list": ["@"]},
+  {"keyCode": 90, "letter":" ", "list": ["&nbsp"]},
+  {"keyCode": 90, "letter":" ", "list": ["&nbsp"]},
+  {"keyCode": 90, "letter":" ", "list": ["&nbsp"]},
+  {"keyCode": 90, "letter":" ", "list": ["&nbsp"]},
+  {"keyCode": 90, "letter":".", "list": ["."]},
+  {"keyCode": 90, "letter":"sym", "list": ["&iquest"]},
+  {"keyCode": 90, "letter":"blank", "list": ["&deg"]},
+
+  {"keyCode": 90, "letter":"0", "list": ["0"]},
+  {"keyCode": 90, "letter":"1", "list": ["1"]},
+  {"keyCode": 90, "letter":"2", "list": ["2"]},
+  {"keyCode": 90, "letter":"3", "list": ["3"]},
+  {"keyCode": 90, "letter":"4", "list": ["4"]},
+  {"keyCode": 90, "letter":"5", "list": ["5"]},
+  {"keyCode": 90, "letter":"6", "list": ["6"]},
+  {"keyCode": 90, "letter":"7", "list": ["7"]},
+  {"keyCode": 90, "letter":"8", "list": ["8"]},
+  {"keyCode": 90, "letter":"9", "list": ["9"]},
+  {"keyCode": 90, "letter":".", "list": ["."]},
+
+  {"keyCode": 65, "letter":"A", "list": ["A"], "modifier": 16},
+  {"keyCode": 67, "letter":"c", "list": ["©","ç"]},
+  {"keyCode": 67, "letter":"C", "list": ["Ç"], "modifier": 16},
+  {"keyCode": 69, "letter":"e", "list": ["é","è","ë","ê","ē"]},
+  {"keyCode": 69, "letter":"E", "list": ["É","È","Ë","Ê"], "modifier": 16},
+  {"keyCode": 73, "letter":"i", "list": ["í","ì","ï","î"]},
+  {"keyCode": 73, "letter":"I", "list": ["Í","Ì","Ï","Î"], "modifier": 16},
+  {"keyCode": 78, "letter":"n", "list": ["ñ"]},
+  {"keyCode": 78, "letter":"N", "list": ["Ñ"], "modifier": 16},
+  {"keyCode": 79, "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø"]},
+  {"keyCode": 79, "letter":"O", "list": ["Ó","Ò","Ö","Ô","Œ","Õ","Ø"], "modifier": 16},
+  {"keyCode": 83, "letter":"s", "list": ["ß"]},
+  {"keyCode": 85, "letter":"u", "list": ["ú","ù","ü","û"]},
+  {"keyCode": 85, "letter":"U", "list": ["Ú","Ù","ÜÛ"], "modifier": 16},
+  {"keyCode": 88, "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89, "letter":"y", "list": ["ÿ"]},
+  {"keyCode": 89, "letter":"Y", "list": ["Ÿ"], "modifier": 16},
+  {"keyCode": 82, "letter":"r", "list": ["®"]},
+  {"keyCode": 80, "letter":"p", "list": ["¶"]},
+  {"keyCode": 84, "letter":"t", "list": ["™"]},
+  {"keyCode": 68, "letter":"D", "list": ["†","‡"], "modifier": 16},
+  {"keyCode": 96, "letter":"0", "list": ["°"]},
+  {"keyCode": 97, "letter":"1", "list": ["¹", "¼", "½"]},
+  {"keyCode": 98, "letter":"2", "list": ["²"]},
+  {"keyCode": 99, "letter":"3", "list": ["³", "¾"]},
+  {"keyCode": 67, "letter":"!", "list": ["¡"]},
+  {"keyCode": 67, "letter":"?", "list": ["¿"]},
+  {"keyCode": 67, "letter":":", "list": [":-)", ":-(", ";-)"]},
+  {"keyCode": 67, "letter":"$", "list": ["$","¢","€","£","¥"]}
+]
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css b/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
index 39fa4ec..b98b50c 100644
--- a/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
+++ b/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
@@ -16,6 +16,7 @@
 @import url(global-iconography.css);
 @import url(global-widget-addressing.css);
 @import url(global-widget-mvpicker.css);
+@import url(webos-internals-virtual-keyboard.css);
 
 a {
   color: #00c;
@@ -665,4 +666,4 @@ span.selected-char {
   height: 111px;
   background: url(../images/disclaimer-beta.png) no-repeat;     
   -webkit-palm-mouse-target: ignore;
-}
\ No newline at end of file
+}
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/webos-internals-virtual-keyboard.css b/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/webos-internals-virtual-keyboard.css
new file mode 100755
index 0000000..8363863
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/webos-internals-virtual-keyboard.css
@@ -0,0 +1,134 @@
+/* Styles for On Screen Keyboard */
+
+.kb-char-selector-container {
+  position: fixed;
+  z-index: 199500; /* same as popup */
+  width: 320px;
+}
+
+/*
+.kb-char-selector-wrapper {
+  position: relative;
+  z-index: 100000;
+}
+.kb-char-selector-wrapper {
+  z-index: 199500;
+  position:relative;
+  top: 0px;
+  left: 0px;
+  width: 320px;
+  background: black;
+}
+  */
+
+.kb-char-selector-content {
+  padding: 0px;
+  max-height: 264px; /* rows are 48px tall */
+  overflow: hidden;   
+}
+
+.kb-char-selector-column.first{
+  margin-top:72px;
+}
+
+.kb-char-selector-column {
+  width: 320px;
+  height: 48px;
+}
+
+.kb-char-selector-element{
+  color: white;
+  width:10%;
+  height:48px;
+  line-height:48px;
+  display:inline-block;
+  float:left;
+  font-weight: normal;
+  text-align: center;
+  vertical-align: middle;
+  margin-right: -1px;
+  border-bottom: 1px solid #999;
+  border-right: 1px solid #999;
+}
+
+.kb-char-selector-element .kb-img{
+  position: relative;
+  width: 100%;
+  height: 100%;
+}
+
+.kb-char-selector-element .kb-span{
+  position: relative;
+}
+
+/*
+.kb-char-selector-element.selected {
+  background: #444;
+  color: #fff !important;
+}
+  */
+
+/*
+span.selected-char {
+  font-weight: bold;
+  color: #1f75bf;
+  height: 48px;
+  width: 50%;
+  height: 50%
+  background: url(../images/filter-search-highlight.png) bottom repeat-x;
+}
+  */
+
+
+  /*
+.kb-char-selector-element.kb-selected-char{
+  color: red;
+  font-weight: bold;
+  color: #1f75bf;
+  height: 48px;
+  background: url(../images/filter-search-highlight.png) bottom repeat-x;
+}
+  */
+
+.kb-char-selector-element.kb-selected-char .kb-span{
+  left: -25%;
+  top: -150%;
+  color: red;
+}
+
+.kb-char-selector-element.kb-selected-char .kb-img{
+  width: 150%;
+  height: 150%;
+}
+
+/*
+.kb-char-selector-element.kb-active-char{
+  background:#0072ff;
+}
+
+.kb-char-selector-element.kb-active-char.locked{
+  background:#984c08;
+}
+  */
+
+.kb-char-selector-element.kb-active-char .kb-img{
+  position: relative;
+  width: 70%;
+  height: 70%;
+  top:15%;
+}
+
+.kb-char-selector-element.kb-active-char.locked .kb-img{
+  width: 50%;
+  height: 50%;
+  top:15%;
+}
+
+/* Landscape rows */
+.kb-char-selector-container.landscape {
+  width: 480px;
+}
+
+.kb-char-selector-column.landscape {
+  width: 480px;
+}
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-ls.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-ls.html
new file mode 100644
index 0000000..3d78ff7
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-ls.html
@@ -0,0 +1,3 @@
+<div id="#{divPrefix}-#{index}" name="#{index}" class="kb-char-selector-element landscape" x-mojo-tap-highlight="momentary">
+  <span name="#{index}" class="kb-span">#{-character}</span>
+</div>
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row-ls.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row-ls.html
new file mode 100644
index 0000000..a5a8217
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row-ls.html
@@ -0,0 +1 @@
+<div class="kb-char-selector-column landscape">#{-characters}</div>
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row.html
new file mode 100644
index 0000000..847f837
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row.html
@@ -0,0 +1 @@
+<div class="kb-char-selector-column">#{-characters}</div>
\ No newline at end of file
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char.html
new file mode 100644
index 0000000..6cfac50
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char.html
@@ -0,0 +1,3 @@
+<div id="#{divPrefix}-#{index}" name="#{index}" class="kb-char-selector-element" x-mojo-tap-highlight="momentary">
+  <span name="#{index}" class="kb-span">#{-character}</span>
+</div>
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector-ls.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector-ls.html
new file mode 100644
index 0000000..28aa368
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector-ls.html
@@ -0,0 +1,7 @@
+<div  class="kb-char-selector-container landscape" id="#{divPrefix}-kb-char-selector-div">
+  <div class="kb-char-selector-wrapper">
+  	<div class="kb-char-selector-content landscape" x-mojo-element="Scroller" id="#{divPrefix}-char-selector">
+		<div class="kb-char-selector-content landscape" id="char-list" x-mojo-element="List">
+		</div>  
+  </div>
+</div> 
diff --git a/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector.html b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector.html
new file mode 100644
index 0000000..600c1c3
--- /dev/null
+++ b/usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector.html
@@ -0,0 +1,7 @@
+<div  class="kb-char-selector-container" id="#{divPrefix}-kb-char-selector-div">
+  <div class="kb-char-selector-wrapper">
+  	<div class="kb-char-selector-content scroll" x-mojo-element="Scroller" id="#{divPrefix}-char-selector">
+		<div class="kb-char-selector-content" id="char-list" x-mojo-element="List">
+		</div>  
+  </div>
+</div> 
