Modifications to Framework to get On-Screen Keyboard when user taps gesture area.
Index: /usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
===================================================================
--- .orig/usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
+++ /usr/palm/frameworks/mojo/builtins/palmInitFramework191_15.js
@@ -674,6 +674,7 @@ _Dialog:'widget_dialog',
 Pager:null,
 Drawer:null,
 CharSelector:null,
+OnScreenKeyboard:null,
 FilterList:null,
 _Submenu:'widget_submenu',
 ExperimentalGridList:'widget_grid',
@@ -3717,6 +3718,12 @@ if(this.charSelector&&this.charSelector.
 return;
 }
 this.charSelector=this.createDynamicWidget('CharSelector',{selectionTarget:event.selectionTarget});
+}else if(event.type===Mojo.Event.renderOnScreenKeyboard){
+
+if(this.charSelector&&this.charSelector.element&&this.charSelector.element.mojo&&this.charSelector.element.mojo.isOpen()){
+return;
+}
+this.charSelector=this.createDynamicWidget('OnScreenKeyboard',{selectionTarget:event.selectionTarget});
 }
 },
 
@@ -3996,6 +4003,7 @@ kDefaultSceneName:'main',
 kSceneClassName:'palm-scene',
 kBrowserObject:'application/x-palm-browser',
 enableAltCharPicker:true,
+enableOnScreenKeyboard:true,
 
 
 
@@ -4891,6 +4899,15 @@ if(webView){
 webView.mojo.isEditing(this._sendCharpickerEventCallback.bind(this,Mojo.Event.renderAltCharacters,webView,null));
 }
 }
+}else if(this.enableOnScreenKeyboard&&event.keyCode===Mojo.Char.metaKey){
+if(this.doesTargetAcceptKeys(event.target)){
+this._sendCharpickerEvent(Mojo.Event.renderOnScreenKeyboard,event.target,null);
+}else{
+webView=this._getWebview(event.target);
+if(webView){
+webView.mojo.isEditing(this._sendCharpickerEventCallback.bind(this,Mojo.Event.renderOnScreenKeyboard,webView,null));
+}
+}
 }else if(event.keyCode===Mojo.Char.o&&event.ctrlKey&&event.shiftKey&&Mojo.Config.debuggingEnabled){
 
 
@@ -9431,6 +9448,9 @@ Mojo.Event.renderAltCharacters='mojo-alt
 Mojo.Event.renderChordedAltCharacters='mojo-altchars-chorded';
 
 
+Mojo.Event.renderOnScreenKeyboard='webos-internals-onscreen-keyboard';
+
+
 Mojo.Event.orientationChange='mojo-orientation';
 
 
@@ -10619,7 +10639,7 @@ return stringTable;
 
 Mojo.Locale.set=function(currentLocale,formatRegion){
 var deviceInfo=Mojo.Environment.DeviceInfo;
-var altCharFullTable,altCharTable;
+var altCharFullTable,altCharTable,kbCharTable,kbCharFullTable;
 
 if(Mojo.Locale.current!=currentLocale){
 Mojo.Locale.current=currentLocale;
@@ -10660,13 +10680,21 @@ Mojo.Locale.frameworkStrings=Mojo.Locale
 if(deviceInfo.keyboardType===Mojo.Environment.AZERTY){
 altCharTable="alternatechars_table_azerty.json";
 altCharFullTable="alternatechars_fulltable_azerty.json";
+kbCharTable="kbchars_table_azerty.json";
+kbCharFullTable="kbchars_fulltable_azerty.json";
 }else if(deviceInfo.keyboardType===Mojo.Environment.QWERTZ){
 altCharTable="alternatechars_table_qwertz.json";
 altCharFullTable="alternatechars_fulltable_qwertz.json";
+kbCharTable="kbchars_table_qwertz.json";
+kbCharFullTable="kbchars_fulltable_qwertz.json";
 }else{
 altCharTable="alternatechars_table.json";
 altCharFullTable="alternatechars_fulltable.json";
+kbCharTable="kbchars_table.json";
+kbCharFullTable="kbchars_fulltable.json";
 }
+Mojo.Locale.kbCharacters=Mojo.Locale.readStringTable(kbCharTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
+Mojo.Locale.kbCharactersFull=Mojo.Locale.readStringTable(kbCharFullTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.alternateCharacters=Mojo.Locale.readStringTable(altCharTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.alternateCharactersFull=Mojo.Locale.readStringTable(altCharFullTable,Mojo.Locale.current,Mojo.Locale.frameworkResourcePath,altCharArrayMerge);
 Mojo.Locale.DateTimeStrings=Mojo.Locale.readStringTable("datetime_table.json",Mojo.Locale.current,Mojo.Locale.frameworkResourcePath);
@@ -34320,6 +34348,628 @@ return true;
 }
 return false;
 };
+
+Mojo.Widget.OnScreenKeyboard=Class.create({
+
+HI_PADDING_TOP:40,
+
+HI_PADDING_BOTTOM:20,
+
+HI_PADDING_LEFT:20,
+
+HI_PADDING_RIGHT:20,
+
+HI_COLUMNS:10,
+
+HI_MINIMUM_TOP:10,
+
+HI_MAX_BOTTOM:5,
+
+
+itemTemplate:Mojo.Widget.getSystemTemplatePath('/kbselector/char'),
+
+
+initialize:function(){
+this.ONSCREEN_KB_OPEN=0;
+this.ONSCREEN_KB_FILTERING_STATE=1;
+this.ONSCREEN_KB_CLOSED=2;
+this.ONSCREEN_KB_EMPTY=3;
+
+this.state=this.ONSCREEN_KB_OPEN;
+
+this.charList=[];
+this.localizedTable=Mojo.Locale.kbCharacters;
+this.localizedTableFull=Mojo.Locale.kbCharactersFull;
+},
+
+
+setup:function(){
+var model=this.controller.model;
+
+this.controller.exposeMethods(['close','isOpen']);
+if(this.controller.attributes.target){
+this.target=this.controller.get(this.controller.attributes.target);
+}else if(model.selectionTarget){
+this.target=this.controller.get(model.selectionTarget);
+}
+this.divPrefix=Mojo.View.makeUniqueId();
+this.currCode=this.controller.model.character;
+if(this.currCode!==undefined){
+this.chorded=true;
+}
+
+if(this.renderWidget(this.controller.model.character)){
+this.handleKeyEvent=this.handleKeyEvent.bind(this);
+this.handleKeyUpEvent=this.handleKeyUpEvent.bind(this);
+this.handleMouseEvent=this.handleMouseEvent.bind(this);
+this.controller.listen(this.target,"keydown",this.handleKeyEvent,true);
+this.controller.listen(this.target,"keyup",this.handleKeyUpEvent,true);
+this.controller.listen(this.controller.document,Mojo.Event.tap,this.handleMouseEvent,true);
+
+if(this.chorded){
+
+this.state=this.ONSCREEN_KB_FILTERING_STATE;
+}else{
+this.enterOpenState();
+}
+this.controller.scene.pushContainer(this.controller.element,this.controller.scene.submenuContainerLayer,
+{cancelFunc:this._emptyAndClose.bind(this)});
+this.controller.scene.pushCommander(this);
+}
+},
+
+
+cleanup:function(){
+
+
+this.charPicker=undefined;
+this.selectedIndex=undefined;
+this.state=this.ONSCREEN_KB_CLOSED;
+this.cleanupEventListeners();
+},
+
+
+
+
+
+cleanupEventListeners:function(){
+this.controller.stopListening(this.target,"keydown",this.handleKeyEvent,true);
+this.controller.stopListening(this.target,"keyup",this.handleKeyUpEvent,true);
+this.controller.stopListening(this.controller.document,Mojo.Event.tap,this.handleMouseEvent,true);
+},
+
+
+loadTable:function(chr){
+var data,list;
+var i=0;
+var that=this;
+var table;
+
+this.charList=[];
+if(chr){
+table=this.localizedTable;
+}else if(chr===undefined){
+table=this.localizedTableFull;
+}else{
+return;
+}
+
+table.each(function(c){
+if(chr){
+if(c.keyCode==chr){
+list=c.list;
+}
+}else{
+list=c.list;
+}
+if(list){
+list.each(function(item){
+data={
+index:i,
+character:item
+};
+that.charList.push(data);
+i++;
+});
+}
+list=undefined;
+});
+},
+
+
+_setPopupPositions:function(picker){
+var top='',left='';
+var cursorPos=Mojo.View.getCursorPosition(this.controller.window);
+var targetLeft;
+var pickerDims;
+var viewDims;
+var maxWidth,minWidth;
+
+if(cursorPos){
+targetLeft=this.target.offsetLeft;
+viewDims=Mojo.View.getViewportDimensions(this.controller.document);
+
+
+pickerDims=Mojo.View.getDimensions(picker);
+
+
+if((pickerDims.height+this.HI_PADDING_BOTTOM+cursorPos.y)>viewDims.height){
+top=cursorPos.y-(pickerDims.height+this.HI_PADDING_TOP);
+if(top<this.HI_MINIMUM_TOP){
+top=this.HI_MINIMUM_TOP;
+}
+}else{
+top=cursorPos.y+cursorPos.height+this.HI_PADDING_BOTTOM;
+if((top+pickerDims.height)>(viewDims.height-this.HI_MAX_BOTTOM)){
+top=viewDims.height-this.HI_MAX_BOTTOM-pickerDims.height;
+}
+}
+
+left=cursorPos.x;
+maxWidth=viewDims.width-this.HI_PADDING_RIGHT;
+minWidth=targetLeft+this.HI_PADDING_LEFT;
+
+if((pickerDims.width+cursorPos.x)>maxWidth){
+
+left=maxWidth-pickerDims.width;
+}else if((cursorPos.x-pickerDims.width)<minWidth){
+
+left=minWidth;
+}
+
+left+='px';
+top+='px';
+}else if(this.target.type==='application/x-palm-browser'){
+
+}else{
+left='0px';
+top='0px';
+}
+
+console.log("Set left 0");
+left = '0px';
+this.charPicker.setStyle({'top':top,'left':left});
+},
+
+
+translateToRow:function(results){
+
+var finished=false;
+var result;
+var newOffset=0;
+var transformedResults=[];
+
+while(!finished){
+result={};
+
+
+result.characters=Mojo.View.render({collection:results.slice(newOffset,newOffset+this.HI_COLUMNS),attributes:{divPrefix:this.divPrefix},template:this.itemTemplate});
+newOffset+=this.HI_COLUMNS;
+transformedResults.push(result);
+if(newOffset>=results.length){
+finished=true;
+}
+}
+return transformedResults;
+},
+
+
+renderWidget:function(chr){
+var data;
+var charContent;
+var charContentModel;
+var pickerContent;
+var parent;
+
+this.loadTable(chr);
+if(this.charList&&this.charList.length>0){
+
+charContentModel={
+divPrefix:this.divPrefix
+};
+
+this.itemsModel={items:this.translateToRow(this.charList)};
+this.charPicker=undefined;
+pickerContent=Mojo.View.render({object:charContentModel,template:Mojo.Widget.getSystemTemplatePath('/kbselector/charselector')});
+
+parent=Mojo.View.getScrollerForElement(this.target);
+if(!parent){
+parent=this.controller.scene.sceneElement;
+}
+if(this.controller.element.parentNode!==parent){
+this.controller.reparent(parent);
+}
+this.controller.element.innerHTML=pickerContent;
+
+this.charPicker=this.controller.get(this.divPrefix+'-kb-char-selector-div');
+
+this.controller.scene.setupWidget('char-list',
+{itemTemplate:Mojo.Widget.getSystemTemplatePath('kbselector/char-selector-row'),renderLimit:30},this.itemsModel);
+this.controller.instantiateChildWidgets(this.charPicker);
+this.controller.scene.showWidgetContainer(this.charPicker);
+this._setPopupPositions(this.charPicker);
+
+this.selectedIndex=0;
+this._updateSelected(null,this._selectedIdxElem());
+if(this._selectedIdxElem()){
+this.perLine=Math.floor(Element.getWidth(this.charPicker)/Element.getWidth(this._selectedIdxElem()));
+}else{
+this.perLine=0;
+}
+return true;
+}else{
+if(!this.chorded){
+this.exitSelector();
+return false;
+}else{
+return true;
+}
+}
+},
+
+
+enterOpenState:function(){
+
+this.state=this.ONSCREEN_KB_OPEN;
+},
+
+
+_maybeRemoveCharpicker:function(){
+if(this.charPicker){
+if(this.charPicker.parentNode){
+Element.remove(this.charPicker);
+}
+this.charPicker=undefined;
+}
+},
+
+
+enterFilteringState:function(keyCode){
+
+this.state=this.ONSCREEN_KB_FILTERING_STATE;
+
+if(this.currCode!==keyCode){
+this.currCode=keyCode;
+
+this._maybeRemoveCharpicker();
+this.renderWidget(this.currCode);
+}else{
+
+this.advance();
+}
+},
+
+
+handleModelChanged:function(model,what){
+Element.show(this.charPicker);
+if(Mojo.Char.isValid(this.controller.model.character)){
+this.enterFilteringState(this.controller.model.character);
+}
+},
+
+
+_emptyAndClose:function(){
+this.state=this.ONSCREEN_KB_EMPTY;
+this.close();
+},
+
+
+close:function(){
+
+if(this.state===this.ONSCREEN_KB_FILTERING_STATE||this.state===this.ONSCREEN_KB_OPEN){
+this.exitSelector(this.getEntered());
+return;
+}
+
+this._safeRemove();
+},
+
+
+isOpen:function(){
+return this.state!==this.ONSCREEN_KB_CLOSED;
+},
+
+
+
+exitSelector:function(chr){
+var letter;
+var characterVal,selection;
+var tagName=this.target.tagName;
+var selectionStart,selectionEnd;
+var isWebView=false;
+
+
+if(this.target.mojo&&this.target.mojo.insertStringAtCursor){
+isWebView=true;
+}
+
+/*
+this.state=this.ONSCREEN_KB_CLOSED;
+*/
+
+
+if(chr){
+letter=chr.character;
+selection=this.controller.window.getSelection();
+
+if(selection&&selection.rangeCount>0&&selection.getRangeAt(0)){
+this.controller.document.execCommand("insertText",true,letter);
+}else if(isWebView&&letter!==null&&letter!==undefined){
+this.target.mojo.insertStringAtCursor(letter);
+}
+
+
+if(this.target.mojo&&this.target.mojo.setText){
+selectionStart=this.target.selectionStart;
+selectionEnd=this.target.selectionEnd;
+this.target.mojo.setText(this.target.value);
+this.target.selectionStart=selectionStart;
+this.target.selectionEnd=selectionEnd;
+}
+
+
+/*
+this.cleanupEventListeners();
+this._safeRemove.bind(this).delay(0.2);
+*/
+}else{
+this._safeRemove();
+}
+
+if(!isWebView){
+this.target.focus();
+}
+},
+
+
+_safeRemove:function(){
+this.controller.scene.removeContainer(this.controller.element);
+if(this.controller.element&&this.controller.element.parentNode){
+Element.remove(this.controller.element);
+}
+},
+
+
+_insertChar:function(origValue,letter,start,end){
+var value='';
+if(origValue){
+value=origValue.substring(0,start);
+value+=letter;
+value+=origValue.substring(end,origValue.length);
+}else{
+value=letter;
+}
+return value;
+},
+
+
+advance:function(){
+var old=this._selectedIdxElem();
+var newElm;
+
+if(this.selectedIndex+1>this.charList.length-1){
+this.selectedIndex=0;
+}else{
+this.selectedIndex++;
+}
+
+newElm=this._selectedIdxElem();
+this._updateSelected(old,newElm);
+},
+
+
+retreat:function(){
+var old,newElm;
+
+old=this._selectedIdxElem();
+if(this.selectedIndex===0){
+this.selectedIndex=this.charList.length-1;
+}else{
+this.selectedIndex=this.selectedIndex-1;
+}
+newElm=this._selectedIdxElem();
+this._updateSelected(old,newElm);
+},
+
+
+_getMatching:function(element,query){
+if(!element){
+return;
+}
+return element.querySelector("[name='"+query+"']");
+},
+
+
+_updateSelected:function(oldSelection,newSelection){
+var node;
+if(oldSelection){
+node=this._getMatching(oldSelection,oldSelection.getAttribute("name"));
+if(node){
+node.removeClassName("selected-char");
+}
+}
+if(newSelection){
+node=this._getMatching(newSelection,newSelection.getAttribute("name"));
+if(node){
+node.addClassName("selected-char");
+}
+}
+},
+
+
+
+moveDown:function(){
+var old,newElm;
+if(this.selectedIndex+this.perLine<this.charList.length){
+old=this._selectedIdxElement();
+this.selectedIndex=this.selectedIndex+this.perLine;
+newElm=this._selectedIdxElement();
+this._updateSelected(old,newElm);
+}
+},
+
+
+moveUp:function(){
+var old,newElm;
+if(this.selectedIndex-this.perLine>=0){
+old=this._selectedIdxElem();
+this.selectedIndex=this.selectedIndex-this.perLine;
+newElm=this._selectedIdxElem();
+this._updatedSelected(old,newElm);
+}
+},
+
+
+updatePosition:function(key){
+switch(key){
+case Mojo.Char.leftArrow:
+this.retreat();
+break;
+case Mojo.Char.upArrow:
+this.moveUp();
+break;
+case Mojo.Char.rightArrow:
+this.advance();
+break;
+case Mojo.Char.downArrow:
+this.moveDown();
+break;
+default:
+break;
+}
+
+if(this.charPicker){
+this.controller.get(this.divPrefix+'-char-selector').mojo.revealElement(this._selectedIdxElem());
+}
+},
+
+
+
+handleKeyUpEvent:function(event){
+var keyCode=event.keyCode;
+var chr;
+
+if(this.isSymKey(keyCode)){
+if(this.state===this.ONSCREEN_KB_FILTERING_STATE){
+chr=this.getEntered();
+}
+this.exitSelector(chr);
+Event.stop(event);
+return;
+}
+},
+
+
+handleKeyEvent:function(event){
+var keyCode=event.keyCode;
+
+if(Mojo.Char.isEnterKey(keyCode)){
+this.exitSelector(this.getEntered());
+Event.stop(event);
+
+return;
+}
+if(Mojo.Char.isDeleteKey(keyCode)){
+this.exitSelector();
+Event.stop(event);
+return;
+}
+if(this.isDirectionalKey(keyCode)){
+this.updatePosition(keyCode);
+Event.stop(event);
+return;
+}
+
+if(!Mojo.Char.isValid(keyCode)){
+return;
+}
+
+switch(this.state){
+case this.ONSCREEN_KB_OPEN:
+case this.ONSCREEN_KB_FILTERING_STATE:
+case this.ONSCREEN_KB_EMPTY:
+this.enterFilteringState(keyCode);
+Event.stop(event);
+break;
+default:
+break;
+}
+},
+
+
+handleMouseEvent:function(event){
+
+switch(this.state){
+case this.ONSCREEN_KB_OPEN:
+case this.ONSCREEN_KB_FILTERING_STATE:
+case this.ONSCREEN_KB_SINGLEFILTER_STATE:
+if(this.isInCharPicker(event.target)){
+console.log("kb CHAR MOUSE EVENT"+this.getSelected(event.target));
+this.exitSelector(this.getSelected(event.target));
+event.stop();
+}else{
+this.exitSelector();
+}
+break;
+default:
+break;
+}
+},
+
+
+getEntered:function(){
+return this.charList[this.selectedIndex];
+},
+
+
+getSelected:function(target){
+var chr=target.getAttribute('name');
+
+return this.charList[chr];
+},
+
+
+
+
+
+
+isDirectionalKey:function(key){
+if(key==Mojo.Char.leftArrow||key==Mojo.Char.upArrow||key==Mojo.Char.rightArrow||key==Mojo.Char.downArrow){
+return true;
+}
+return false;
+},
+
+
+isInCharPicker:function(target){
+if(!this.charPicker){
+return;
+}
+if(target.id==this.charPicker.id||Element.up(target,'div#'+this.charPicker.id)){
+return true;
+}
+return false;
+},
+
+
+isSymKey:function(keyCode){
+return keyCode===Mojo.Char.sym;
+},
+
+
+_selectedIdxElem:function(){
+return this.controller.get(this.divPrefix+"-"+this.selectedIndex);
+},
+
+
+handleCommand:function(commandEvent){
+if(commandEvent.type===Mojo.Event.back&&(this.state!==this.ONSCREEN_KB_CLOSED&&this.state!==this.ONSCREEN_KB_EMPTY)){
+this.exitSelector();
+Event.stop(commandEvent);
+}
+}
+});
+
 /* Compressed by the perl version of jsmin. */
 /* JavaScript::Minifier 0.02 */
 
Index: /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable.json
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable.json
@@ -0,0 +1,87 @@
+[
+  {"keyCode": 80, "letter":"q", "list": ["q"]},
+  {"keyCode": 80, "letter":"w", "list": ["w"]},
+  {"keyCode": 69, "letter":"e", "list": ["e"]},
+  {"keyCode": 80, "letter":"r", "list": ["r"]},
+  {"keyCode": 80, "letter":"t", "list": ["t"]},
+  {"keyCode": 80, "letter":"y", "list": ["y"]},
+  {"keyCode": 80, "letter":"u", "list": ["u"]},
+  {"keyCode": 70, "letter":"i", "list": ["i"]},
+  {"keyCode": 70, "letter":"o", "list": ["o"]},
+  {"keyCode": 80, "letter":"p", "list": ["p"]},
+
+  {"keyCode": 65, "letter":"a", "list": ["a"]},
+  {"keyCode": 80, "letter":"s", "list": ["s"]},
+  {"keyCode": 68, "letter":"d", "list": ["d"]},
+  {"keyCode": 70, "letter":"f", "list": ["f"]},
+  {"keyCode": 70, "letter":"g", "list": ["g"]},
+  {"keyCode": 70, "letter":"h", "list": ["h"]},
+  {"keyCode": 70, "letter":"j", "list": ["j"]},
+  {"keyCode": 70, "letter":"k", "list": ["k"]},
+  {"keyCode": 70, "letter":"l", "list": ["l"]},
+  {"keyCode": 70, "letter":"B", "list": ["B"]},
+
+  {"keyCode": 90, "letter":"O", "list": ["O"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 80, "letter":"x", "list": ["x"]},
+  {"keyCode": 67, "letter":"c", "list": ["c"]},
+  {"keyCode": 80, "letter":"v", "list": ["v"]},
+  {"keyCode": 66, "letter":"b", "list": ["b"]},
+  {"keyCode": 70, "letter":"n", "list": ["n"]},
+  {"keyCode": 70, "letter":"m", "list": ["m"]},
+  {"keyCode": 90, "letter":",", "list": [","]},
+  {"keyCode": 90, "letter":"E", "list": ["E"]},
+
+  {"keyCode": 90, "letter":"0", "list": ["0"]},
+  {"keyCode": 90, "letter":"S", "list": ["S"]},
+  {"keyCode": 90, "letter":"A", "list": ["A"]},
+  {"keyCode": 90, "letter":"S", "list": ["S"]},
+  {"keyCode": 90, "letter":"S", "list": ["S"]},
+  {"keyCode": 90, "letter":"S", "list": ["S"]},
+  {"keyCode": 90, "letter":"S", "list": ["S"]},
+  {"keyCode": 90, "letter":".", "list": ["."]},
+  {"keyCode": 90, "letter":"Y", "list": ["Y"]},
+  {"keyCode": 90, "letter":"0", "list": ["0"]},
+
+  {"keyCode": 90, "letter":"0", "list": ["0"]},
+  {"keyCode": 90, "letter":"1", "list": ["1"]},
+  {"keyCode": 90, "letter":"2", "list": ["2"]},
+  {"keyCode": 90, "letter":"3", "list": ["3"]},
+  {"keyCode": 90, "letter":"4", "list": ["4"]},
+  {"keyCode": 90, "letter":"5", "list": ["5"]},
+  {"keyCode": 90, "letter":"6", "list": ["6"]},
+  {"keyCode": 90, "letter":"7", "list": ["7"]},
+  {"keyCode": 90, "letter":"8", "list": ["8"]},
+  {"keyCode": 90, "letter":"9", "list": ["9"]},
+  {"keyCode": 90, "letter":".", "list": ["."]},
+
+  {"keyCode": 65, "letter":"A", "list": ["A"], "modifier": 16},
+  {"keyCode": 67, "letter":"c", "list": ["©","ç"]},
+  {"keyCode": 67, "letter":"C", "list": ["Ç"], "modifier": 16},
+  {"keyCode": 69, "letter":"e", "list": ["é","è","ë","ê","ē"]},
+  {"keyCode": 69, "letter":"E", "list": ["É","È","Ë","Ê"], "modifier": 16},
+  {"keyCode": 73, "letter":"i", "list": ["í","ì","ï","î"]},
+  {"keyCode": 73, "letter":"I", "list": ["Í","Ì","Ï","Î"], "modifier": 16},
+  {"keyCode": 78, "letter":"n", "list": ["ñ"]},
+  {"keyCode": 78, "letter":"N", "list": ["Ñ"], "modifier": 16},
+  {"keyCode": 79, "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø"]},
+  {"keyCode": 79, "letter":"O", "list": ["Ó","Ò","Ö","Ô","Œ","Õ","Ø"], "modifier": 16},
+  {"keyCode": 83, "letter":"s", "list": ["ß"]},
+  {"keyCode": 85, "letter":"u", "list": ["ú","ù","ü","û"]},
+  {"keyCode": 85, "letter":"U", "list": ["Ú","Ù","Ü","Û"], "modifier": 16},
+  {"keyCode": 88, "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89, "letter":"y", "list": ["ÿ"]},
+  {"keyCode": 89, "letter":"Y", "list": ["Ÿ"], "modifier": 16},
+  {"keyCode": 82, "letter":"r", "list": ["®"]},
+  {"keyCode": 80, "letter":"p", "list": ["¶"]},
+  {"keyCode": 84, "letter":"t", "list": ["™"]},
+  {"keyCode": 68, "letter":"D", "list": ["†","‡"], "modifier": 16},
+  {"keyCode": 96, "letter":"0", "list": ["°"]},
+  {"keyCode": 97, "letter":"1", "list": ["¹", "¼", "½"]},
+  {"keyCode": 98, "letter":"2", "list": ["²"]},
+  {"keyCode": 99, "letter":"3", "list": ["³", "¾"]},
+  {"keyCode": 67, "letter":"!", "list": ["¡"]},
+  {"keyCode": 67, "letter":"?", "list": ["¿"]},
+  {"keyCode": 67, "letter":":", "list": [":-)", ":-(", ";-)"]},
+  {"keyCode": 67, "letter":"$", "list": ["$","¢","€","£","¥"]}
+]
Index: /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable_qwertz.json
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_fulltable_qwertz.json
@@ -0,0 +1,58 @@
+[
+  {"keyCode": 65, "letter":"a", "list": ["a"]},
+  {"keyCode": 66, "letter":"b", "list": ["b"]},
+  {"keyCode": 67, "letter":"c", "list": ["c"]},
+  {"keyCode": 68, "letter":"d", "list": ["d"]},
+  {"keyCode": 69, "letter":"e", "list": ["e"]},
+  {"keyCode": 70, "letter":"f", "list": ["f"]},
+  {"keyCode": 70, "letter":"g", "list": ["g"]},
+  {"keyCode": 70, "letter":"h", "list": ["h"]},
+  {"keyCode": 70, "letter":"i", "list": ["i"]},
+  {"keyCode": 70, "letter":"j", "list": ["j"]},
+  {"keyCode": 70, "letter":"k", "list": ["k"]},
+  {"keyCode": 70, "letter":"l", "list": ["l"]},
+  {"keyCode": 70, "letter":"m", "list": ["m"]},
+  {"keyCode": 70, "letter":"n", "list": ["n"]},
+  {"keyCode": 70, "letter":"o", "list": ["o"]},
+  {"keyCode": 80, "letter":"p", "list": ["p"]},
+  {"keyCode": 80, "letter":"q", "list": ["q"]},
+  {"keyCode": 80, "letter":"r", "list": ["r"]},
+  {"keyCode": 80, "letter":"s", "list": ["s"]},
+  {"keyCode": 80, "letter":"t", "list": ["t"]},
+  {"keyCode": 80, "letter":"u", "list": ["u"]},
+  {"keyCode": 80, "letter":"v", "list": ["v"]},
+  {"keyCode": 80, "letter":"w", "list": ["w"]},
+  {"keyCode": 80, "letter":"x", "list": ["x"]},
+  {"keyCode": 80, "letter":"y", "list": ["y"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 90, "letter":"z", "list": ["z"]},
+  {"keyCode": 65, "letter":"A", "list": ["A"], "modifier": 16},
+  {"keyCode": 67, "letter":"c", "list": ["©","ç"]},
+  {"keyCode": 67, "letter":"C", "list": ["Ç"], "modifier": 16},
+  {"keyCode": 69, "letter":"e", "list": ["é","è","ë","ê","ē"]},
+  {"keyCode": 69, "letter":"E", "list": ["É","È","Ë","Ê"], "modifier": 16},
+  {"keyCode": 73, "letter":"i", "list": ["í","ì","ï","î"]},
+  {"keyCode": 73, "letter":"I", "list": ["Í","Ì","Ï","Î"], "modifier": 16},
+  {"keyCode": 78, "letter":"n", "list": ["ñ"]},
+  {"keyCode": 78, "letter":"N", "list": ["Ñ"], "modifier": 16},
+  {"keyCode": 79, "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø"]},
+  {"keyCode": 79, "letter":"O", "list": ["Ó","Ò","Ö","Ô","Œ","Õ","Ø"], "modifier": 16},
+  {"keyCode": 83, "letter":"s", "list": ["ß"]},
+  {"keyCode": 85, "letter":"u", "list": ["ú","ù","ü","û"]},
+  {"keyCode": 85, "letter":"U", "list": ["Ú","Ù","Ü","Û"], "modifier": 16},
+  {"keyCode": 88, "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89, "letter":"y", "list": ["ÿ"]},
+  {"keyCode": 89, "letter":"Y", "list": ["Ÿ"], "modifier": 16},
+  {"keyCode": 82, "letter":"r", "list": ["®"]},
+  {"keyCode": 80, "letter":"p", "list": ["¶"]},
+  {"keyCode": 84, "letter":"t", "list": ["™"]},
+  {"keyCode": 68, "letter":"D", "list": ["†","‡"], "modifier": 16},
+  {"keyCode": 96, "letter":"0", "list": ["°"]},
+  {"keyCode": 97, "letter":"1", "list": ["¹", "¼", "½"]},
+  {"keyCode": 98, "letter":"2", "list": ["²"]},
+  {"keyCode": 99, "letter":"3", "list": ["³", "¾"]},
+  {"keyCode": 67, "letter":"!", "list": ["¡"]},
+  {"keyCode": 67, "letter":"?", "list": ["¿"]},
+  {"keyCode": 67, "letter":":", "list": [":-)", ":-(", ";-)"]},
+  {"keyCode": 67, "letter":"$", "list": ["$","¢","€","£","¥"]}
+]
Index: /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table.json
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table.json
@@ -0,0 +1,30 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["b"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
Index: /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_azerty.json
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_azerty.json
@@ -0,0 +1,29 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
\ No newline at end of file
Index: /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_qwertz.json
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/resources/en_us/kbchars_table_qwertz.json
@@ -0,0 +1,29 @@
+[
+  {"keyCode": 188, "letter":",", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 190, "letter":".", "list": ["…","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 48,  "letter":"@", "list": ["°","•","Ø"]},
+  {"keyCode": 65,  "letter":"a", "list": ["á","à","ä","â","ã","å","æ","Á","À","Ä","Â","Ã","Å","Æ","ª","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 66,  "letter":"b", "list": ["~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 67,  "letter":"c", "list": ["©","ç","Ç","¢"]},
+  {"keyCode": 68,  "letter":"d", "list": ["†","‡"]},
+  {"keyCode": 69,  "letter":"e", "list": ["é","è","ë","ê","ē","É","È","Ë","Ê","€","¹","¼","½"]},
+  {"keyCode": 72,  "letter":"h", "list": ["¢","€","£","¥","ƒ"]},
+  {"keyCode": 73,  "letter":"i", "list": ["í","ì","ï","î","Í","Ì","Ï","Î","÷","‰"]},
+  {"keyCode": 74,  "letter":"j", "list": ["¡"]},
+  {"keyCode": 75,  "letter":"k", "list": [":-)",":-(",";-)"]},
+  {"keyCode": 76,  "letter":"l", "list": ["`","‘","’","‚","‛","\""]},
+  {"keyCode": 77,  "letter":"m", "list": ["µ",":-)",":-(",";-)"]},
+  {"keyCode": 78,  "letter":"n", "list": ["ñ","Ñ","¿"]},
+  {"keyCode": 79,  "letter":"o", "list": ["ó","ò","ö","ô","œ","õ","ø","Ó","Ò","Ö","Ô","Œ","Õ","Ø","º","“","”","„","<",">","«","»"]},
+  {"keyCode": 80,  "letter":"p", "list": ["¶","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","µ","|"]},
+  {"keyCode": 81,  "letter":"q", "list": ["\\","~","|"]},
+  {"keyCode": 82,  "letter":"r", "list": ["®","²"]},
+  {"keyCode": 83,  "letter":"s", "list": ["ß","š","Š","~","\\","`","•","÷","^","[","]","{","}","<",">","«","»","Ø","|"]},
+  {"keyCode": 84,  "letter":"t", "list": ["™","³","¾"]},
+  {"keyCode": 85,  "letter":"u", "list": ["ú","ù","ü","û","Ú","Ù","Ü","Û","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 86,  "letter":"v", "list": ["^"]},
+  {"keyCode": 87,  "letter":"w", "list": ["÷","^","±"]},
+  {"keyCode": 88,  "letter":"x", "list": ["×","¤"]},
+  {"keyCode": 89,  "letter":"y", "list": ["ÿ","ý","Ÿ","Ý","¥","[","]","{","}","<",">","«","»"]},
+  {"keyCode": 90,  "letter":"z", "list": ["ž","Ž","•"]}
+]
\ No newline at end of file
Index: /usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
===================================================================
--- .orig/usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
+++ /usr/palm/frameworks/mojo/submissions/191.15/stylesheets/global.css
@@ -483,7 +483,7 @@ a:visited {
 }
 
 .char-selector-element {
-  color: #666;
+  color: red;
   width: 48px;
   height: 48px;
   line-height: 48px;
@@ -511,6 +511,60 @@ span.selected-char {
 }
 
   
+/* Styles for On Screen Keyboard */
+
+.kb-char-selector-container {
+  z-index: 199500; /* same as popup */
+  position:fixed;
+  width: 320px;
+  border-width: 24px;
+  -webkit-border-image: url(../images/palm-popup-background.png) 24 24 24 24 repeat repeat;
+  -webkit-box-sizing: border-box;
+}
+
+.kb-char-selector-container .kb-char-selector-wrapper {
+  margin: -15px -16px -15px -16px;
+}
+
+.kb-char-selector-content {
+  padding: 0px;
+  max-height: 192px; /* rows are 48px tall */
+  overflow: hidden;   
+}
+
+.kb-char-selector-column {
+  width: 304px;
+  height: 48px;
+}
+
+.kb-char-selector-element {
+  color: red;
+  width: 29px;
+  height: 48px;
+  line-height: 48px;
+  display:inline-block; /* inv */
+  text-align: center;
+  font-weight: normal;
+  border-bottom: 1px solid #999;
+  border-right: 1px solid #999;
+}
+
+.kb-char-selector-element.selected {
+  background: #444;
+  color: #fff !important;
+}
+
+span.selected-char {
+  font-weight: bold;
+  color: #1f75bf;
+  height: 48px;
+  background: url(../images/filter-search-highlight.png) bottom repeat-x;
+}
+
+.char-selector-element:nth-child(10n) {
+  border-right: none;
+}
+
 /** Slider and Progress Slider **/
 
 .palm-row-wrapper > .palm-slider {
@@ -665,4 +719,4 @@ span.selected-char {
   height: 111px;
   background: url(../images/disclaimer-beta.png) no-repeat;     
   -webkit-palm-mouse-target: ignore;
-}
\ No newline at end of file
+}
Index: /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row.html
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char-selector-row.html
@@ -0,0 +1 @@
+<div class="kb-char-selector-column">#{-characters}</div>
\ No newline at end of file
Index: /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char.html
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/char.html
@@ -0,0 +1,3 @@
+<div id="#{divPrefix}-#{index}" name="#{index}" class="kb-char-selector-element" x-mojo-tap-highlight="momentary">
+	<span name="#{index}">#{-character}</span>
+</div>
\ No newline at end of file
Index: /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector.html
===================================================================
--- /dev/null
+++ /usr/palm/frameworks/mojo/submissions/191.15/templates/kbselector/charselector.html
@@ -0,0 +1,6 @@
+<div  class="kb-char-selector-container" id="#{divPrefix}-kb-char-selector-div">
+  <div class="kb-char-selector-wrapper">
+		<div class="kb-char-selector-content" id="char-list" x-mojo-element="List">
+		</div>  
+  </div>
+</div> 
\ No newline at end of file
